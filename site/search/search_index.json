{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"\u6280\u672f\u6742\u8bb0 \u00b6","title":"Home"},{"location":"#_1","text":"","title":"\u6280\u672f\u6742\u8bb0"},{"location":"android/","text":"","title":"Index"},{"location":"android/perf/top/","text":"top\u547d\u4ee4\u662fLinux\u4e0b\u5e38\u7528\u7684\u6027\u80fd\u5206\u6790\u5de5\u5177\uff0c\u80fd\u591f\u5b9e\u65f6\u663e\u793a\u7cfb\u7edf\u4e2d\u5404\u4e2a\u8fdb\u7a0b\u7684\u8d44\u6e90\u5360\u7528\u72b6\u51b5\uff0c\u5305\u62ec\u8fdb\u7a0bID\u3001\u5185\u5b58\u5360\u7528\u7387\u3001CPU\u5360\u7528\u7387\u7b49,\u7c7b\u4f3c\u4e8eWindows\u7684\u4efb\u52a1\u7ba1\u7406\u5668\u3002top\u547d\u4ee4\u63d0\u4f9b\u4e86\u5b9e\u65f6\u7684\u5bf9\u7cfb\u7edf\u5904\u7406\u5668\u7684\u72b6\u6001\u76d1\u89c6.\u5b83\u5c06\u663e\u793a\u7cfb\u7edf\u4e2dCPU\u6700\u201c\u654f\u611f\u201d\u7684\u4efb\u52a1\u5217\u8868.\u8be5\u547d\u4ee4\u53ef\u4ee5\u6309CPU\u4f7f\u7528.\u5185\u5b58\u4f7f\u7528\u548c\u6267\u884c\u65f6\u95f4\u5bf9\u4efb\u52a1\u8fdb\u884c\u6392\u5e8f\u3002\u5728Android\u4e2d\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7 adb shell \u6765\u6267\u884clinux\u76f8\u5173\u547d\u4ee4\u3002 Android \u63d0\u4f9b\u4e86\u5927\u591a\u6570\u5e38\u89c1\u7684 Unix \u547d\u4ee4\u884c\u5de5\u5177\u3002\u5982\u9700\u67e5\u770b\u53ef\u7528\u5de5\u5177\u7684\u5217\u8868\uff0c\u8bf7\u4f7f\u7528\u4ee5\u4e0b\u547d\u4ee4: adb shell ls /system/bin \u8bed\u6cd5 \u00b6 [ adb shell ] top [ option ] \u5168\u5c40\u9009\u9879 \u00b6 \u5168\u5c40\u9009\u9879 \u8bf4\u660e -h/--help \u663e\u793a\u5e2e\u52a9\u6d88\u606f\u3002 \u547d\u4ee4\u548c\u547d\u4ee4\u9009\u9879 \u00b6 \u9009\u9879 \u8bf4\u660e -b \u6279\u5904\u7406 -H \u663e\u793a\u7ebf\u7a0b\u4fe1\u606f -k -field.. \u4fee\u6539\u9ed8\u8ba4\u6392\u5e8f\u5b57\u6bb5 \uff08\u9ed8\u8ba4\u662f-S,-%CPU,-ETIME,-PID\uff09 -o field.. \u4fee\u6539\u5c55\u793a\u5b57\u6bb5 \uff08\u9ed8\u8ba4\u662fPID,USER,PR,NI,VIRT,RES,SHR,S,%CPU,%MEM,TIME+,CMDLINE\uff09 -d n \u8bbe\u7f6en\u79d2\u66f4\u65b0\u4e00\u6b21\u4fe1\u606f\uff0c\u9ed8\u8ba4\u662f3\u79d2 -p pid \u663e\u793a\u6307\u5b9apid\u7684\u8fdb\u7a0b\u4fe1\u606f -m n \u53ea\u663e\u793an\u4e2a\u4efb\u52a1\u4fe1\u606f -u user \u6307\u5b9a\u7528\u6237\u540duser -n m \u5faa\u73af\u663e\u793am\u6b21 \u547d\u4ee4\u8f93\u51fa\u8bf4\u660e \u00b6 \u547d\u4ee4 \u00b6 top \u8f93\u51fa \u00b6 Tasks: 829 total, 1 running, 828 sleeping, 0 stopped, 0 zombie Mem: 3665268K total, 3060140K used, 605128K free, 1585152 buffers Swap: 2097148K total, 622800K used, 1474348K free, 1160664K cached 800 %cpu 11 %user 0 %nice 13 %sys 771 %idle 0 %iow 2 %irq 1 %sirq 0 %host PID USER PR NI VIRT RES SHR S [ %CPU ] %MEM TIME+ ARGS 679 system -3 -8 11G 13M 8 .2M S 8 .3 0 .3 7 :13.28 surfaceflinger 2801 u0_a197 20 0 13G 57M 36M S 6 .6 1 .5 2 :56.09 com.breel.wall+ 28115 shell 20 0 10G 3 .5M 1 .8M R 3 .6 0 .1 0 :45.73 top 681 system -3 -8 10G 3 .9M 2 .8M S 3 .0 0 .1 2 :12.51 android.hardwa+ 28686 root 20 0 0 0 0 S 1 .6 0 .0 0 :00.57 [ kworker/u16:1 ] 28388 root 20 0 0 0 0 S 1 .0 0 .0 0 :08.10 [ kworker/u16:8 ] 18994 u0_a159 10 -10 47G 170M 107M S 1 .0 4 .7 0 :27.44 com.google.and+ 1696 system 18 -2 16G 370M 278M S 1 .0 10 .3 5 :16.30 system_server 312 root RT 0 0 0 0 S 1 .0 0 .0 0 :54.34 [ crtc_commit:1+ 3002 radio 20 0 14G 73M 43M S 0 .6 2 .0 0 :26.95 com.android.ph+ 10 root 20 0 0 0 0 S 0 .6 0 .0 0 :11.32 [ rcuop/0 ] 28236 u0_a195 20 0 15G 107M 61M S 0 .3 2 .9 0 :02.06 com.google.and+ 27789 root 20 0 0 0 0 S 0 .3 0 .0 0 :02.76 [ kworker/3:0 ] 1218 wifi 20 0 10G 2 .7M 2 .0M S 0 .3 0 .0 0 :02.35 wificond 1032 wifi 20 0 10G 10M 1 .9M S 0 .3 0 .2 0 :28.13 vendor.google.+ 651 root RT 0 0 0 0 S 0 .3 0 .0 0 :21.95 [ sugov:0 ] 264 root -3 0 0 0 0 S 0 .3 0 .0 0 :18.47 [ kgsl_worker_t+ 53 root 20 0 0 0 0 S 0 .3 0 .0 0 :02.24 [ rcuop/5 ] 45 root 20 0 0 0 0 S 0 .3 0 .0 0 :04.84 [ rcuop/4 ] 29 root 20 0 0 0 0 S 0 .3 0 .0 0 :05.73 [ rcuop/2 ] \u8f93\u51fa\u8bf4\u660e \u00b6 \u7b2c\u4e00\u884c: Tasks \u2014 \u4efb\u52a1\uff08\u8fdb\u7a0b\uff09\uff0c\u5177\u4f53\u4fe1\u606f\u8bf4\u660e\u5982\u4e0b\uff1a \u5c55\u793a\u9879 \u8bf4\u660e 829 total \u5171\u6709829\u4e2a\u8fdb\u7a0b 1 running \u5904\u4e8e\u8fd0\u884c\u4e2d\u7684\u67091\u4e2a 828 sleeping 828\u4e2a\u5728\u4f11\u7720\uff08sleep\uff09 0 stopped stoped\u72b6\u6001\u7684\u67090\u4e2a 0 zombie zombie\u72b6\u6001\uff08\u50f5\u5c38\uff09\u7684\u67090\u4e2a \u7b2c\u4e8c\u884c: \u5185\u5b58\u72b6\u6001\uff0c\u5177\u4f53\u4fe1\u606f\u8bf4\u660e\u5982\u4e0b\uff1a \u5c55\u793a\u9879 \u8bf4\u660e 3665268K total \u7269\u7406\u5185\u5b58\u603b\u91cf\uff08\u7ea63.5GB) 3060140K used \u4f7f\u7528\u4e2d\u7684\u5185\u5b58\u603b\u91cf\uff08\u7ea611.7GB\uff09 605128K free \u7a7a\u95f2\u5185\u5b58\u603b\u91cf\uff08\u7ea6590M\uff09 1585152 buffers \u7f13\u5b58\u7684\u5185\u5b58\u91cf\uff08\u7ea61.5GB\uff09 \u7b2c\u4e09\u884c\uff0cswap\u4ea4\u6362\u5206\u533a\u4fe1\u606f\uff0c\u5177\u4f53\u4fe1\u606f\u8bf4\u660e\u5982\u4e0b\uff1a \u5c55\u793a\u9879 \u8bf4\u660e 2097148K total \u4ea4\u6362\u533a\u603b\u91cf\uff08\u7ea62GB\uff09 622800K used \u4f7f\u7528\u7684\u4ea4\u6362\u533a\u603b\u91cf\uff08\u7ea6608M\uff09 1474348K free \u7a7a\u95f2\u4ea4\u6362\u533a\u603b\u91cf\uff08\u7ea61.4GB\uff09 1160664K cached \u7f13\u51b2\u7684\u4ea4\u6362\u533a\u603b\u91cf\uff08\u7ea61.1GB\uff09 \u7b2c\u56db\u884c\uff0ccpu\u72b6\u6001\u4fe1\u606f\uff0c\u5177\u4f53\u5c5e\u6027\u8bf4\u660e\u5982\u4e0b\uff1a \u5c55\u793a\u9879 \u8bf4\u660e 800%cpu CPU\u603b\u91cf 11%user \u7528\u6237\u7a7a\u95f4\u5360\u7528CPU\u7684\u767e\u5206\u6bd4(\u4e0d\u5305\u542bnice\u503c\u4e3a\u8d1f\u7684\u8fdb\u7a0b) 0%nice \u6539\u53d8\u8fc7\u4f18\u5148\u7ea7\u7684\u8fdb\u7a0b\u5360\u7528CPU\u7684\u767e\u5206\u6bd4(nice\u503c\u4e3a\u8d1f\u7684\u8fdb\u7a0b) 13%sys \u5185\u6838\u7a7a\u95f4\u5360\u7528CPU\u7684\u767e\u5206\u6bd4 771%idle \u7a7a\u95f2CPU\u767e\u5206\u6bd4 0%iow IO\u7b49\u5f85\u5360\u7528CPU\u7684\u767e\u5206\u6bd4 2%irq \u786c\u4e2d\u65ad\uff08Hardware IRQ\uff09\u5360\u7528CPU\u7684\u767e\u5206\u6bd4 1%sirq \u8f6f\u4e2d\u65ad\uff08Software Interrupts\uff09\u5360\u7528CPU\u7684\u767e\u5206\u6bd4 0%host \uff1f \u7b2c\u4e94\u884c\u4ee5\u4e0b\uff1a\u5404\u8fdb\u7a0b\uff08\u4efb\u52a1\uff09\u7684\u72b6\u6001\u76d1\u63a7\uff0c\u9879\u76ee\u5217\u4fe1\u606f\u8bf4\u660e\u5982\u4e0b\uff1a \u5c55\u793a\u9879 \u8bf4\u660e PID \u8fdb\u7a0bid USER \u8fdb\u7a0b\u6240\u6709\u8005 PR \u8fdb\u7a0b\u4f18\u5148\u7ea7 NI nice\u503c\u3002\u8d1f\u503c\u8868\u793a\u9ad8\u4f18\u5148\u7ea7\uff0c\u6b63\u503c\u8868\u793a\u4f4e\u4f18\u5148\u7ea7 VIRT \u8fdb\u7a0b\u4f7f\u7528\u7684\u865a\u62df\u5185\u5b58\u603b\u91cf\u3002VIRT=SWAP+RES RES \u7a0b\u4f7f\u7528\u7684\u3001\u672a\u88ab\u6362\u51fa\u7684\u7269\u7406\u5185\u5b58\u5927\u5c0f\uff0cRES=CODE+DATA SHR \u5171\u4eab\u5185\u5b58\u5927\u5c0f S \u8fdb\u7a0b\u72b6\u6001\u3002D=\u4e0d\u53ef\u4e2d\u65ad\u7684\u7761\u7720\u72b6\u6001 R=\u8fd0\u884c S=\u7761\u7720 T=\u8ddf\u8e2a/\u505c\u6b62 Z=\u50f5\u5c38\u8fdb\u7a0b %CPU \u4e0a\u6b21\u66f4\u65b0\u5230\u73b0\u5728\u7684CPU\u65f6\u95f4\u5360\u7528\u767e\u5206\u6bd4 %MEM \u8fdb\u7a0b\u4f7f\u7528\u7684\u7269\u7406\u5185\u5b58\u767e\u5206\u6bd4 TIME+ ARGS \u8fdb\u7a0b\u4f7f\u7528\u7684CPU\u65f6\u95f4\u603b\u8ba1\u548c\u8fdb\u7a0b\u540d \u8865\u5145\u8bf4\u660e \u00b6 swap\u5206\u533a\uff1a\u5f53\u7cfb\u7edf\u7684\u7269\u7406\u5185\u5b58\u4e0d\u591f\u7528\u7684\u65f6\u5019\uff0c\u5c31\u9700\u8981\u5c06\u7269\u7406\u5185\u5b58\u4e2d\u7684\u4e00\u90e8\u5206\u7a7a\u95f4\u91ca\u653e\u51fa\u6765\uff0c\u4ee5\u4f9b\u5f53\u524d\u8fd0\u884c\u7684\u7a0b\u5e8f\u4f7f\u7528\u3002 \u90a3\u4e9b\u88ab\u91ca\u653e\u7684\u7a7a\u95f4\u53ef\u80fd\u6765\u81ea\u4e00\u4e9b\u5f88\u957f\u65f6\u95f4\u6ca1\u6709\u4ec0\u4e48\u64cd\u4f5c\u7684\u7a0b\u5e8f\uff0c\u8fd9\u4e9b\u88ab\u91ca\u653e\u7684\u7a7a\u95f4\u88ab\u4e34\u65f6\u4fdd\u5b58\u5230Swap\u7a7a\u95f4\u4e2d\uff0c\u7b49\u5230\u90a3\u4e9b\u7a0b\u5e8f\u8981\u8fd0\u884c\u65f6\uff0c\u518d\u4eceSwap\u4e2d\u6062\u590d\u4fdd\u5b58\u7684\u6570\u636e\u5230\u5185\u5b58\u4e2d\u3002 \u5173\u4e8eswap\u5206\u533a\uff0c\u53ef\u4ee5\u53c2\u8003 swap \u5206\u533a \u7b2c\u4e8c\u884c\u4e2d\u4f7f\u7528\u4e2d\u7684\u5185\u5b58\u603b\u91cf\uff08used\uff09\u6307\u7684\u662f\u73b0\u5728\u7cfb\u7edf\u5185\u6838\u63a7\u5236\u7684\u5185\u5b58\u6570\uff0c\u7a7a\u95f2\u5185\u5b58\u603b\u91cf\uff08free\uff09\u662f\u5185\u6838\u8fd8\u672a\u7eb3\u5165\u5176\u7ba1\u63a7\u8303\u56f4\u7684\u6570\u91cf\u3002\u7eb3\u5165\u5185\u6838\u7ba1\u7406\u7684\u5185\u5b58\u4e0d\u89c1\u5f97\u90fd\u5728\u4f7f\u7528\u4e2d\uff0c\u8fd8\u5305\u62ec\u8fc7\u53bb\u4f7f\u7528\u8fc7\u7684\u73b0\u5728\u53ef\u4ee5\u88ab\u91cd\u590d\u5229\u7528\u7684\u5185\u5b58\uff0c\u5185\u6838\u5e76\u4e0d\u628a\u8fd9\u4e9b\u53ef\u88ab\u91cd\u65b0\u4f7f\u7528\u7684\u5185\u5b58\u4ea4\u8fd8\u5230free\u4e2d\u53bb\uff0c\u56e0\u6b64\u5728android\u4e0afree\u5185\u5b58\u4f1a\u8d8a\u6765\u8d8a\u5c11\uff0c\u4f46\u4e0d\u7528\u4e3a\u6b64\u62c5\u5fc3\u3002 \u5982\u679c\u51fa\u4e8e\u4e60\u60ef\u53bb\u8ba1\u7b97\u53ef\u7528\u5185\u5b58\u6570\uff0c\u8fd9\u91cc\u6709\u4e2a\u8fd1\u4f3c\u7684\u8ba1\u7b97\u516c\u5f0f\uff1a\u7b2c\u4e8c\u884c\u7684free + \u7b2c\u4e8c\u884c\u7684buffers + \u7b2c\u4e09\u884c\u7684cached\uff0c\u6309\u8fd9\u4e2a\u516c\u5f0f\u6b64\u53f0\u8bbe\u5907\u7684\u53ef\u7528\u5185\u5b58\uff1a605128K +1585152K +1160664K = 3.2GB\u5de6\u53f3\u3002 \u5bf9\u4e8e\u5185\u5b58\u76d1\u63a7\uff0c\u5728top\u91cc\u6211\u4eec\u8981\u65f6\u523b\u76d1\u63a7\u7b2c\u4e09\u884cswap\u4ea4\u6362\u5206\u533a\u7684used\uff0c\u5982\u679c\u8fd9\u4e2a\u6570\u503c\u5728\u4e0d\u65ad\u7684\u53d8\u5316\uff0c\u8bf4\u660e\u5185\u6838\u5728\u4e0d\u65ad\u8fdb\u884c\u5185\u5b58\u548cswap\u7684\u6570\u636e\u4ea4\u6362\uff0c\u8fd9\u662f\u771f\u6b63\u7684\u5185\u5b58\u4e0d\u591f\u7528\u4e86\u3002 nice\u503c\u8868\u793a\u8fdb\u7a0b\u53ef\u88ab\u6267\u884c\u7684\u4f18\u5148\u7ea7\u7684\u4fee\u6b63\u6570\u503c\u3002\u8fdb\u7a0b\u4f18\u5148\u7ea7(PR)\u503c\u8d8a\u5c0f\u8d8a\u5feb\u88ab\u6267\u884c\uff0c\u52a0\u5165nice\u503c\u540e\uff0c\u5c06\u4f1a\u4f7f\u5f97PR\u53d8\u4e3a\uff1a PR(new)=PR(old)+nice \u3002\u5728LINUX\u7cfb\u7edf\u4e2d\uff0cNice\u503c\u7684\u8303\u56f4\u4ece-20\u5230+19 \u4e0d\u540c\u7684Android\u7cfb\u7edf\uff0ctop\u547d\u4ee4\u5f97\u5230\u7684\u7ed3\u679c\u6709\u6240\u4e0d\u540c\u3002\u4e0a\u8ff0\u662fAndroid O\uff088.0\u7cfb\u7edf\uff0clevel = 26\uff09 \u53ca\u4e4b\u540etop\u547d\u4ee4\u5f97\u5230\u7684\u7ed3\u679c\u3002Android N\uff087.1\u7cfb\u7edf\uff0clevel = 25\uff09 \u53ca\u4e4b\u524dtop\u547d\u4ee4\u5f97\u5230\u7ed3\u679c\u5982\u4e0b\uff1a //CPU\u5360\u7528\u7387\uff1aUser \u7528\u6237\u8fdb\u7a0b\uff1bSystem \u7cfb\u7edf\u8fdb\u7a0b\uff1bIOW IO\u7b49\u5f85\u65f6\u95f4\uff1bIRQ \u786c\u4e2d\u65ad\u65f6\u95f4 User 0 %, System 4 %, IOW 0 %, IRQ 0 % // CPU\u4f7f\u7528\u60c5\u51b5\uff1a // User \u5904\u4e8e\u7528\u6237\u6001\u7684\u8fd0\u884c\u65f6\u95f4\uff0c\u4e0d\u5305\u542b\u4f18\u5148\u503c\u4e3a\u8d1f\u8fdb\u7a0b // Nice \u4f18\u5148\u503c\u4e3a\u8d1f\u7684\u8fdb\u7a0b\u6240\u5360\u7528\u7684CPU\u65f6\u95f4 // Sys \u5904\u4e8e\u6838\u5fc3\u6001\u7684\u8fd0\u884c\u65f6\u95f4 // Idle \u9664IO\u7b49\u5f85\u65f6\u95f4\u4ee5\u5916\u7684\u5176\u5b83\u7b49\u5f85\u65f6\u95f4 // IOW IO\u7b49\u5f85\u65f6\u95f4 // IRQ \u786c\u4e2d\u65ad\u65f6\u95f4 // SIRQ \u8f6f\u4e2d\u65ad\u65f6\u95f4 User 2 + Nice 0 + Sys 12 + Idle 284 + IOW 0 + IRQ 0 + SIRQ 0 = 298 //// \u8fdb\u7a0b\u5c5e\u6027\uff1a // PID \u8fdb\u7a0b\u5728\u7cfb\u7edf\u4e2d\u7684ID // CPU% \u5f53\u524d\u77ac\u65f6\u6240\u4ee5\u4f7f\u7528CPU\u5360\u7528\u7387 // S \u8fdb\u7a0b\u7684\u72b6\u6001\uff0c\u5176\u4e2dS\u8868\u793a\u4f11\u7720\uff0cR\u8868\u793a\u6b63\u5728\u8fd0\u884c\uff0cZ\u8868\u793a\u50f5\u6b7b\u72b6\u6001\uff0cN\u8868\u793a\u8be5\u8fdb\u7a0b\u4f18\u5148\u503c\u662f\u8d1f\u6570\u3002 // #THR \u7a0b\u5e8f\u5f53\u524d\u6240\u7528\u7684\u7ebf\u7a0b\u6570 // VSS Virtual Set Size \u865a\u62df\u8017\u7528\u5185\u5b58\uff08\u5305\u542b\u5171\u4eab\u5e93\u5360\u7528\u7684\u5185\u5b58\uff09 // RSS Resident Set Size \u5b9e\u9645\u4f7f\u7528\u7269\u7406\u5185\u5b58\uff08\u5305\u542b\u5171\u4eab\u5e93\u5360\u7528\u7684\u5185\u5b58\uff09 // PCY Policy\u7cfb\u7edf\u5bf9\u8fd9\u4e2a\u8fdb\u7a0b/\u7ebf\u7a0b\u7684\u8c03\u5ea6\u7b56\u7565\uff0cbg \u540e\u53f0\uff1bfg \u524d\u53f0 // Name \u7a0b\u5e8f\u540d\u79f0 PID USER PR NI CPU% S #THR VSS RSS PCY Name 6498 root 20 0 3 % R 1 9116K 1888K fg top 253 root RT 0 0 % S 1 0K 0K fg nanohub 3 root 20 0 0 % S 1 0K 0K fg ksoftirqd/0 387 root 20 0 0 % S 1 0K 0K fg kworker/u16:4 \u4ee3\u7801\u901a\u8fc7top\u547d\u4ee4\u83b7\u53d6cpu\u4f7f\u7528\u7387 \u00b6 \u5728Android O\u4e4b\u524d\u53ef\u4ee5\u901a\u8fc7\u8bfb\u53d6\u4f2a\u6587\u4ef6 /proc/stat \u548c /proc/<pid>/stat \uff0c\u7136\u540e\u8ba1\u7b97\u5f97\u5230cpu\u4f7f\u7528\u7387\uff0cAndroid O\u4e4b\u540e\u6709\u6743\u9650\u9650\u5236\uff0c\u4f46\u53ef\u4ee5\u901a\u8fc7 top -n 1 \u83b7\u53d6cpu\u4f7f\u7528\u7387\uff0c\u4ee3\u7801\u5982\u4e0b private fun getCpuDataForO (): Float { var process : java . lang . Process ? = null var cpuRate = 0.0F try { process = Runtime . getRuntime (). exec ( \"top -n 1\" ) val reader = BufferedReader ( InputStreamReader ( process . inputStream )) var line : String? = null var cpuIndex = - 1 while ( reader . readLine (). also { line = it } != null ) { line = line !! . trim { it <= ' ' } if ( TextUtils . isEmpty ( line )) { continue } val tempIndex = getCPUIndex ( line !! ) if ( tempIndex != - 1 ) { cpuIndex = tempIndex continue } if ( line !! . startsWith ( android . os . Process . myPid (). toString ())) { if ( cpuIndex == - 1 ) { continue } val param = line !! . split ( \"\\\\s+\" . toRegex ()). toTypedArray () if ( param . size <= cpuIndex ) { continue } var cpu = param [ cpuIndex ] if ( cpu . endsWith ( \"%\" )) { cpu = cpu . substring ( 0 , cpu . lastIndexOf ( \"%\" )) } cpuRate = cpu . toFloat () / Runtime . getRuntime (). availableProcessors () } } } catch ( e : Exception ) { Log . e ( TAG , \"getCpuDataForO fail, error: %s\" , e . toString ()) } finally { process ?. destroy () } return cpuRate } \u53c2\u8003\u94fe\u63a5 \u00b6 \u6bcf\u5929\u4e00\u4e2alinux\u547d\u4ee4\uff0844\uff09\uff1atop\u547d\u4ee4","title":"top\u547d\u4ee4"},{"location":"android/perf/top/#_1","text":"[ adb shell ] top [ option ]","title":"\u8bed\u6cd5"},{"location":"android/perf/top/#_2","text":"\u5168\u5c40\u9009\u9879 \u8bf4\u660e -h/--help \u663e\u793a\u5e2e\u52a9\u6d88\u606f\u3002","title":"\u5168\u5c40\u9009\u9879"},{"location":"android/perf/top/#_3","text":"\u9009\u9879 \u8bf4\u660e -b \u6279\u5904\u7406 -H \u663e\u793a\u7ebf\u7a0b\u4fe1\u606f -k -field.. \u4fee\u6539\u9ed8\u8ba4\u6392\u5e8f\u5b57\u6bb5 \uff08\u9ed8\u8ba4\u662f-S,-%CPU,-ETIME,-PID\uff09 -o field.. \u4fee\u6539\u5c55\u793a\u5b57\u6bb5 \uff08\u9ed8\u8ba4\u662fPID,USER,PR,NI,VIRT,RES,SHR,S,%CPU,%MEM,TIME+,CMDLINE\uff09 -d n \u8bbe\u7f6en\u79d2\u66f4\u65b0\u4e00\u6b21\u4fe1\u606f\uff0c\u9ed8\u8ba4\u662f3\u79d2 -p pid \u663e\u793a\u6307\u5b9apid\u7684\u8fdb\u7a0b\u4fe1\u606f -m n \u53ea\u663e\u793an\u4e2a\u4efb\u52a1\u4fe1\u606f -u user \u6307\u5b9a\u7528\u6237\u540duser -n m \u5faa\u73af\u663e\u793am\u6b21","title":"\u547d\u4ee4\u548c\u547d\u4ee4\u9009\u9879"},{"location":"android/perf/top/#_4","text":"","title":"\u547d\u4ee4\u8f93\u51fa\u8bf4\u660e"},{"location":"android/perf/top/#_5","text":"top","title":"\u547d\u4ee4"},{"location":"android/perf/top/#_6","text":"Tasks: 829 total, 1 running, 828 sleeping, 0 stopped, 0 zombie Mem: 3665268K total, 3060140K used, 605128K free, 1585152 buffers Swap: 2097148K total, 622800K used, 1474348K free, 1160664K cached 800 %cpu 11 %user 0 %nice 13 %sys 771 %idle 0 %iow 2 %irq 1 %sirq 0 %host PID USER PR NI VIRT RES SHR S [ %CPU ] %MEM TIME+ ARGS 679 system -3 -8 11G 13M 8 .2M S 8 .3 0 .3 7 :13.28 surfaceflinger 2801 u0_a197 20 0 13G 57M 36M S 6 .6 1 .5 2 :56.09 com.breel.wall+ 28115 shell 20 0 10G 3 .5M 1 .8M R 3 .6 0 .1 0 :45.73 top 681 system -3 -8 10G 3 .9M 2 .8M S 3 .0 0 .1 2 :12.51 android.hardwa+ 28686 root 20 0 0 0 0 S 1 .6 0 .0 0 :00.57 [ kworker/u16:1 ] 28388 root 20 0 0 0 0 S 1 .0 0 .0 0 :08.10 [ kworker/u16:8 ] 18994 u0_a159 10 -10 47G 170M 107M S 1 .0 4 .7 0 :27.44 com.google.and+ 1696 system 18 -2 16G 370M 278M S 1 .0 10 .3 5 :16.30 system_server 312 root RT 0 0 0 0 S 1 .0 0 .0 0 :54.34 [ crtc_commit:1+ 3002 radio 20 0 14G 73M 43M S 0 .6 2 .0 0 :26.95 com.android.ph+ 10 root 20 0 0 0 0 S 0 .6 0 .0 0 :11.32 [ rcuop/0 ] 28236 u0_a195 20 0 15G 107M 61M S 0 .3 2 .9 0 :02.06 com.google.and+ 27789 root 20 0 0 0 0 S 0 .3 0 .0 0 :02.76 [ kworker/3:0 ] 1218 wifi 20 0 10G 2 .7M 2 .0M S 0 .3 0 .0 0 :02.35 wificond 1032 wifi 20 0 10G 10M 1 .9M S 0 .3 0 .2 0 :28.13 vendor.google.+ 651 root RT 0 0 0 0 S 0 .3 0 .0 0 :21.95 [ sugov:0 ] 264 root -3 0 0 0 0 S 0 .3 0 .0 0 :18.47 [ kgsl_worker_t+ 53 root 20 0 0 0 0 S 0 .3 0 .0 0 :02.24 [ rcuop/5 ] 45 root 20 0 0 0 0 S 0 .3 0 .0 0 :04.84 [ rcuop/4 ] 29 root 20 0 0 0 0 S 0 .3 0 .0 0 :05.73 [ rcuop/2 ]","title":"\u8f93\u51fa"},{"location":"android/perf/top/#_7","text":"\u7b2c\u4e00\u884c: Tasks \u2014 \u4efb\u52a1\uff08\u8fdb\u7a0b\uff09\uff0c\u5177\u4f53\u4fe1\u606f\u8bf4\u660e\u5982\u4e0b\uff1a \u5c55\u793a\u9879 \u8bf4\u660e 829 total \u5171\u6709829\u4e2a\u8fdb\u7a0b 1 running \u5904\u4e8e\u8fd0\u884c\u4e2d\u7684\u67091\u4e2a 828 sleeping 828\u4e2a\u5728\u4f11\u7720\uff08sleep\uff09 0 stopped stoped\u72b6\u6001\u7684\u67090\u4e2a 0 zombie zombie\u72b6\u6001\uff08\u50f5\u5c38\uff09\u7684\u67090\u4e2a \u7b2c\u4e8c\u884c: \u5185\u5b58\u72b6\u6001\uff0c\u5177\u4f53\u4fe1\u606f\u8bf4\u660e\u5982\u4e0b\uff1a \u5c55\u793a\u9879 \u8bf4\u660e 3665268K total \u7269\u7406\u5185\u5b58\u603b\u91cf\uff08\u7ea63.5GB) 3060140K used \u4f7f\u7528\u4e2d\u7684\u5185\u5b58\u603b\u91cf\uff08\u7ea611.7GB\uff09 605128K free \u7a7a\u95f2\u5185\u5b58\u603b\u91cf\uff08\u7ea6590M\uff09 1585152 buffers \u7f13\u5b58\u7684\u5185\u5b58\u91cf\uff08\u7ea61.5GB\uff09 \u7b2c\u4e09\u884c\uff0cswap\u4ea4\u6362\u5206\u533a\u4fe1\u606f\uff0c\u5177\u4f53\u4fe1\u606f\u8bf4\u660e\u5982\u4e0b\uff1a \u5c55\u793a\u9879 \u8bf4\u660e 2097148K total \u4ea4\u6362\u533a\u603b\u91cf\uff08\u7ea62GB\uff09 622800K used \u4f7f\u7528\u7684\u4ea4\u6362\u533a\u603b\u91cf\uff08\u7ea6608M\uff09 1474348K free \u7a7a\u95f2\u4ea4\u6362\u533a\u603b\u91cf\uff08\u7ea61.4GB\uff09 1160664K cached \u7f13\u51b2\u7684\u4ea4\u6362\u533a\u603b\u91cf\uff08\u7ea61.1GB\uff09 \u7b2c\u56db\u884c\uff0ccpu\u72b6\u6001\u4fe1\u606f\uff0c\u5177\u4f53\u5c5e\u6027\u8bf4\u660e\u5982\u4e0b\uff1a \u5c55\u793a\u9879 \u8bf4\u660e 800%cpu CPU\u603b\u91cf 11%user \u7528\u6237\u7a7a\u95f4\u5360\u7528CPU\u7684\u767e\u5206\u6bd4(\u4e0d\u5305\u542bnice\u503c\u4e3a\u8d1f\u7684\u8fdb\u7a0b) 0%nice \u6539\u53d8\u8fc7\u4f18\u5148\u7ea7\u7684\u8fdb\u7a0b\u5360\u7528CPU\u7684\u767e\u5206\u6bd4(nice\u503c\u4e3a\u8d1f\u7684\u8fdb\u7a0b) 13%sys \u5185\u6838\u7a7a\u95f4\u5360\u7528CPU\u7684\u767e\u5206\u6bd4 771%idle \u7a7a\u95f2CPU\u767e\u5206\u6bd4 0%iow IO\u7b49\u5f85\u5360\u7528CPU\u7684\u767e\u5206\u6bd4 2%irq \u786c\u4e2d\u65ad\uff08Hardware IRQ\uff09\u5360\u7528CPU\u7684\u767e\u5206\u6bd4 1%sirq \u8f6f\u4e2d\u65ad\uff08Software Interrupts\uff09\u5360\u7528CPU\u7684\u767e\u5206\u6bd4 0%host \uff1f \u7b2c\u4e94\u884c\u4ee5\u4e0b\uff1a\u5404\u8fdb\u7a0b\uff08\u4efb\u52a1\uff09\u7684\u72b6\u6001\u76d1\u63a7\uff0c\u9879\u76ee\u5217\u4fe1\u606f\u8bf4\u660e\u5982\u4e0b\uff1a \u5c55\u793a\u9879 \u8bf4\u660e PID \u8fdb\u7a0bid USER \u8fdb\u7a0b\u6240\u6709\u8005 PR \u8fdb\u7a0b\u4f18\u5148\u7ea7 NI nice\u503c\u3002\u8d1f\u503c\u8868\u793a\u9ad8\u4f18\u5148\u7ea7\uff0c\u6b63\u503c\u8868\u793a\u4f4e\u4f18\u5148\u7ea7 VIRT \u8fdb\u7a0b\u4f7f\u7528\u7684\u865a\u62df\u5185\u5b58\u603b\u91cf\u3002VIRT=SWAP+RES RES \u7a0b\u4f7f\u7528\u7684\u3001\u672a\u88ab\u6362\u51fa\u7684\u7269\u7406\u5185\u5b58\u5927\u5c0f\uff0cRES=CODE+DATA SHR \u5171\u4eab\u5185\u5b58\u5927\u5c0f S \u8fdb\u7a0b\u72b6\u6001\u3002D=\u4e0d\u53ef\u4e2d\u65ad\u7684\u7761\u7720\u72b6\u6001 R=\u8fd0\u884c S=\u7761\u7720 T=\u8ddf\u8e2a/\u505c\u6b62 Z=\u50f5\u5c38\u8fdb\u7a0b %CPU \u4e0a\u6b21\u66f4\u65b0\u5230\u73b0\u5728\u7684CPU\u65f6\u95f4\u5360\u7528\u767e\u5206\u6bd4 %MEM \u8fdb\u7a0b\u4f7f\u7528\u7684\u7269\u7406\u5185\u5b58\u767e\u5206\u6bd4 TIME+ ARGS \u8fdb\u7a0b\u4f7f\u7528\u7684CPU\u65f6\u95f4\u603b\u8ba1\u548c\u8fdb\u7a0b\u540d","title":"\u8f93\u51fa\u8bf4\u660e"},{"location":"android/perf/top/#_8","text":"swap\u5206\u533a\uff1a\u5f53\u7cfb\u7edf\u7684\u7269\u7406\u5185\u5b58\u4e0d\u591f\u7528\u7684\u65f6\u5019\uff0c\u5c31\u9700\u8981\u5c06\u7269\u7406\u5185\u5b58\u4e2d\u7684\u4e00\u90e8\u5206\u7a7a\u95f4\u91ca\u653e\u51fa\u6765\uff0c\u4ee5\u4f9b\u5f53\u524d\u8fd0\u884c\u7684\u7a0b\u5e8f\u4f7f\u7528\u3002 \u90a3\u4e9b\u88ab\u91ca\u653e\u7684\u7a7a\u95f4\u53ef\u80fd\u6765\u81ea\u4e00\u4e9b\u5f88\u957f\u65f6\u95f4\u6ca1\u6709\u4ec0\u4e48\u64cd\u4f5c\u7684\u7a0b\u5e8f\uff0c\u8fd9\u4e9b\u88ab\u91ca\u653e\u7684\u7a7a\u95f4\u88ab\u4e34\u65f6\u4fdd\u5b58\u5230Swap\u7a7a\u95f4\u4e2d\uff0c\u7b49\u5230\u90a3\u4e9b\u7a0b\u5e8f\u8981\u8fd0\u884c\u65f6\uff0c\u518d\u4eceSwap\u4e2d\u6062\u590d\u4fdd\u5b58\u7684\u6570\u636e\u5230\u5185\u5b58\u4e2d\u3002 \u5173\u4e8eswap\u5206\u533a\uff0c\u53ef\u4ee5\u53c2\u8003 swap \u5206\u533a \u7b2c\u4e8c\u884c\u4e2d\u4f7f\u7528\u4e2d\u7684\u5185\u5b58\u603b\u91cf\uff08used\uff09\u6307\u7684\u662f\u73b0\u5728\u7cfb\u7edf\u5185\u6838\u63a7\u5236\u7684\u5185\u5b58\u6570\uff0c\u7a7a\u95f2\u5185\u5b58\u603b\u91cf\uff08free\uff09\u662f\u5185\u6838\u8fd8\u672a\u7eb3\u5165\u5176\u7ba1\u63a7\u8303\u56f4\u7684\u6570\u91cf\u3002\u7eb3\u5165\u5185\u6838\u7ba1\u7406\u7684\u5185\u5b58\u4e0d\u89c1\u5f97\u90fd\u5728\u4f7f\u7528\u4e2d\uff0c\u8fd8\u5305\u62ec\u8fc7\u53bb\u4f7f\u7528\u8fc7\u7684\u73b0\u5728\u53ef\u4ee5\u88ab\u91cd\u590d\u5229\u7528\u7684\u5185\u5b58\uff0c\u5185\u6838\u5e76\u4e0d\u628a\u8fd9\u4e9b\u53ef\u88ab\u91cd\u65b0\u4f7f\u7528\u7684\u5185\u5b58\u4ea4\u8fd8\u5230free\u4e2d\u53bb\uff0c\u56e0\u6b64\u5728android\u4e0afree\u5185\u5b58\u4f1a\u8d8a\u6765\u8d8a\u5c11\uff0c\u4f46\u4e0d\u7528\u4e3a\u6b64\u62c5\u5fc3\u3002 \u5982\u679c\u51fa\u4e8e\u4e60\u60ef\u53bb\u8ba1\u7b97\u53ef\u7528\u5185\u5b58\u6570\uff0c\u8fd9\u91cc\u6709\u4e2a\u8fd1\u4f3c\u7684\u8ba1\u7b97\u516c\u5f0f\uff1a\u7b2c\u4e8c\u884c\u7684free + \u7b2c\u4e8c\u884c\u7684buffers + \u7b2c\u4e09\u884c\u7684cached\uff0c\u6309\u8fd9\u4e2a\u516c\u5f0f\u6b64\u53f0\u8bbe\u5907\u7684\u53ef\u7528\u5185\u5b58\uff1a605128K +1585152K +1160664K = 3.2GB\u5de6\u53f3\u3002 \u5bf9\u4e8e\u5185\u5b58\u76d1\u63a7\uff0c\u5728top\u91cc\u6211\u4eec\u8981\u65f6\u523b\u76d1\u63a7\u7b2c\u4e09\u884cswap\u4ea4\u6362\u5206\u533a\u7684used\uff0c\u5982\u679c\u8fd9\u4e2a\u6570\u503c\u5728\u4e0d\u65ad\u7684\u53d8\u5316\uff0c\u8bf4\u660e\u5185\u6838\u5728\u4e0d\u65ad\u8fdb\u884c\u5185\u5b58\u548cswap\u7684\u6570\u636e\u4ea4\u6362\uff0c\u8fd9\u662f\u771f\u6b63\u7684\u5185\u5b58\u4e0d\u591f\u7528\u4e86\u3002 nice\u503c\u8868\u793a\u8fdb\u7a0b\u53ef\u88ab\u6267\u884c\u7684\u4f18\u5148\u7ea7\u7684\u4fee\u6b63\u6570\u503c\u3002\u8fdb\u7a0b\u4f18\u5148\u7ea7(PR)\u503c\u8d8a\u5c0f\u8d8a\u5feb\u88ab\u6267\u884c\uff0c\u52a0\u5165nice\u503c\u540e\uff0c\u5c06\u4f1a\u4f7f\u5f97PR\u53d8\u4e3a\uff1a PR(new)=PR(old)+nice \u3002\u5728LINUX\u7cfb\u7edf\u4e2d\uff0cNice\u503c\u7684\u8303\u56f4\u4ece-20\u5230+19 \u4e0d\u540c\u7684Android\u7cfb\u7edf\uff0ctop\u547d\u4ee4\u5f97\u5230\u7684\u7ed3\u679c\u6709\u6240\u4e0d\u540c\u3002\u4e0a\u8ff0\u662fAndroid O\uff088.0\u7cfb\u7edf\uff0clevel = 26\uff09 \u53ca\u4e4b\u540etop\u547d\u4ee4\u5f97\u5230\u7684\u7ed3\u679c\u3002Android N\uff087.1\u7cfb\u7edf\uff0clevel = 25\uff09 \u53ca\u4e4b\u524dtop\u547d\u4ee4\u5f97\u5230\u7ed3\u679c\u5982\u4e0b\uff1a //CPU\u5360\u7528\u7387\uff1aUser \u7528\u6237\u8fdb\u7a0b\uff1bSystem \u7cfb\u7edf\u8fdb\u7a0b\uff1bIOW IO\u7b49\u5f85\u65f6\u95f4\uff1bIRQ \u786c\u4e2d\u65ad\u65f6\u95f4 User 0 %, System 4 %, IOW 0 %, IRQ 0 % // CPU\u4f7f\u7528\u60c5\u51b5\uff1a // User \u5904\u4e8e\u7528\u6237\u6001\u7684\u8fd0\u884c\u65f6\u95f4\uff0c\u4e0d\u5305\u542b\u4f18\u5148\u503c\u4e3a\u8d1f\u8fdb\u7a0b // Nice \u4f18\u5148\u503c\u4e3a\u8d1f\u7684\u8fdb\u7a0b\u6240\u5360\u7528\u7684CPU\u65f6\u95f4 // Sys \u5904\u4e8e\u6838\u5fc3\u6001\u7684\u8fd0\u884c\u65f6\u95f4 // Idle \u9664IO\u7b49\u5f85\u65f6\u95f4\u4ee5\u5916\u7684\u5176\u5b83\u7b49\u5f85\u65f6\u95f4 // IOW IO\u7b49\u5f85\u65f6\u95f4 // IRQ \u786c\u4e2d\u65ad\u65f6\u95f4 // SIRQ \u8f6f\u4e2d\u65ad\u65f6\u95f4 User 2 + Nice 0 + Sys 12 + Idle 284 + IOW 0 + IRQ 0 + SIRQ 0 = 298 //// \u8fdb\u7a0b\u5c5e\u6027\uff1a // PID \u8fdb\u7a0b\u5728\u7cfb\u7edf\u4e2d\u7684ID // CPU% \u5f53\u524d\u77ac\u65f6\u6240\u4ee5\u4f7f\u7528CPU\u5360\u7528\u7387 // S \u8fdb\u7a0b\u7684\u72b6\u6001\uff0c\u5176\u4e2dS\u8868\u793a\u4f11\u7720\uff0cR\u8868\u793a\u6b63\u5728\u8fd0\u884c\uff0cZ\u8868\u793a\u50f5\u6b7b\u72b6\u6001\uff0cN\u8868\u793a\u8be5\u8fdb\u7a0b\u4f18\u5148\u503c\u662f\u8d1f\u6570\u3002 // #THR \u7a0b\u5e8f\u5f53\u524d\u6240\u7528\u7684\u7ebf\u7a0b\u6570 // VSS Virtual Set Size \u865a\u62df\u8017\u7528\u5185\u5b58\uff08\u5305\u542b\u5171\u4eab\u5e93\u5360\u7528\u7684\u5185\u5b58\uff09 // RSS Resident Set Size \u5b9e\u9645\u4f7f\u7528\u7269\u7406\u5185\u5b58\uff08\u5305\u542b\u5171\u4eab\u5e93\u5360\u7528\u7684\u5185\u5b58\uff09 // PCY Policy\u7cfb\u7edf\u5bf9\u8fd9\u4e2a\u8fdb\u7a0b/\u7ebf\u7a0b\u7684\u8c03\u5ea6\u7b56\u7565\uff0cbg \u540e\u53f0\uff1bfg \u524d\u53f0 // Name \u7a0b\u5e8f\u540d\u79f0 PID USER PR NI CPU% S #THR VSS RSS PCY Name 6498 root 20 0 3 % R 1 9116K 1888K fg top 253 root RT 0 0 % S 1 0K 0K fg nanohub 3 root 20 0 0 % S 1 0K 0K fg ksoftirqd/0 387 root 20 0 0 % S 1 0K 0K fg kworker/u16:4","title":"\u8865\u5145\u8bf4\u660e"},{"location":"android/perf/top/#topcpu","text":"\u5728Android O\u4e4b\u524d\u53ef\u4ee5\u901a\u8fc7\u8bfb\u53d6\u4f2a\u6587\u4ef6 /proc/stat \u548c /proc/<pid>/stat \uff0c\u7136\u540e\u8ba1\u7b97\u5f97\u5230cpu\u4f7f\u7528\u7387\uff0cAndroid O\u4e4b\u540e\u6709\u6743\u9650\u9650\u5236\uff0c\u4f46\u53ef\u4ee5\u901a\u8fc7 top -n 1 \u83b7\u53d6cpu\u4f7f\u7528\u7387\uff0c\u4ee3\u7801\u5982\u4e0b private fun getCpuDataForO (): Float { var process : java . lang . Process ? = null var cpuRate = 0.0F try { process = Runtime . getRuntime (). exec ( \"top -n 1\" ) val reader = BufferedReader ( InputStreamReader ( process . inputStream )) var line : String? = null var cpuIndex = - 1 while ( reader . readLine (). also { line = it } != null ) { line = line !! . trim { it <= ' ' } if ( TextUtils . isEmpty ( line )) { continue } val tempIndex = getCPUIndex ( line !! ) if ( tempIndex != - 1 ) { cpuIndex = tempIndex continue } if ( line !! . startsWith ( android . os . Process . myPid (). toString ())) { if ( cpuIndex == - 1 ) { continue } val param = line !! . split ( \"\\\\s+\" . toRegex ()). toTypedArray () if ( param . size <= cpuIndex ) { continue } var cpu = param [ cpuIndex ] if ( cpu . endsWith ( \"%\" )) { cpu = cpu . substring ( 0 , cpu . lastIndexOf ( \"%\" )) } cpuRate = cpu . toFloat () / Runtime . getRuntime (). availableProcessors () } } } catch ( e : Exception ) { Log . e ( TAG , \"getCpuDataForO fail, error: %s\" , e . toString ()) } finally { process ?. destroy () } return cpuRate }","title":"\u4ee3\u7801\u901a\u8fc7top\u547d\u4ee4\u83b7\u53d6cpu\u4f7f\u7528\u7387"},{"location":"android/perf/top/#_9","text":"\u6bcf\u5929\u4e00\u4e2alinux\u547d\u4ee4\uff0844\uff09\uff1atop\u547d\u4ee4","title":"\u53c2\u8003\u94fe\u63a5"},{"location":"books/","text":"","title":"index"},{"location":"python/","text":"","title":"index"}]}